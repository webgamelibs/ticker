{"version":3,"file":"ticker.js","sourceRoot":"","sources":["../src/ticker.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,MAAM;IACjB,OAAO,CAAS;IAChB,QAAQ,GAAG,CAAC,CAAA;IAEZ,YAAY,MAAmC,EAAE,GAAY;QAC3D,IAAI,CAAC,OAAO,GAAG,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAA;QAE7D,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;QAChC,IAAI,UAAU,GAAG,CAAC,CAAA;QAElB,MAAM,IAAI,GAAG,CAAC,SAAiB,EAAE,EAAE;YACjC,MAAM,EAAE,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAA;YACxC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC;gBACX,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAA;gBAC3B,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;oBACvC,UAAU,IAAI,EAAE,CAAA;oBAChB,MAAM,SAAS,GAAG,CAAC,GAAG,MAAM,CAAA;oBAC5B,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC;wBAC5B,MAAM,CAAC,SAAS,CAAC,CAAA;wBACjB,IAAI,UAAU,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;4BAAC,MAAM,CAAC,EAAE,CAAC,CAAC;4BAAC,UAAU,GAAG,CAAC,CAAA;wBAAC,CAAC;6BAC1D,CAAC;4BAAC,UAAU,IAAI,SAAS,CAAA;wBAAC,CAAC;oBAClC,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,MAAM,CAAC,EAAE,CAAC,CAAA;gBACZ,CAAC;gBACD,QAAQ,GAAG,SAAS,CAAA;YACtB,CAAC;YACD,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAA;QAC7C,CAAC,CAAA;QACD,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAA;IAC7C,CAAC;IAED,SAAS,CAAC,GAAW;QACnB,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAA;IAC1C,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;IAC1B,CAAC;IAED,MAAM;QACJ,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IACrC,CAAC;CACF","sourcesContent":["export class Ticker {\n  #fpsCap?: number\n  #frameId = 0\n\n  constructor(onTick: (deltaTime: number) => void, fps?: number) {\n    this.#fpsCap = fps !== undefined && fps > 0 ? fps : undefined\n\n    let prevTime = performance.now()\n    let lagSeconds = 0\n\n    const step = (timestamp: number) => {\n      const dt = (timestamp - prevTime) / 1000\n      if (dt > 0) {\n        const fpsCap = this.#fpsCap\n        if (fpsCap !== undefined && fpsCap > 0) {\n          lagSeconds += dt\n          const fixedStep = 1 / fpsCap\n          if (lagSeconds >= fixedStep) {\n            onTick(fixedStep)\n            if (lagSeconds >= fixedStep * 2) { onTick(dt); lagSeconds = 0 }\n            else { lagSeconds -= fixedStep }\n          }\n        } else {\n          onTick(dt)\n        }\n        prevTime = timestamp\n      }\n      this.#frameId = requestAnimationFrame(step)\n    }\n    this.#frameId = requestAnimationFrame(step)\n  }\n\n  setFpsCap(fps: number) {\n    this.#fpsCap = fps > 0 ? fps : undefined\n  }\n\n  disableFpsCap() {\n    this.#fpsCap = undefined\n  }\n\n  remove() {\n    cancelAnimationFrame(this.#frameId)\n  }\n}\n"]}